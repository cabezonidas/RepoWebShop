@model IEnumerable<Lunch>
@inject ILunchRepository _lunchRepository
<style>
    .row.make-columns {
        -moz-column-width: 19em;
        -webkit-column-width: 19em;
        -moz-column-gap: 1em;
        -webkit-column-gap: 1em;
    }
        .row.make-columns > div {
            display: inline-block;
            padding: .5rem;
            width: 100%;
        }

    /* demo only* */
    .panel {
        display: inline-block;
        height: 100%;
        width: 100%;
    }
</style>
@if (Model.Any())
{
<div class="container">
    <h3>¿Qué tal estas opciones?</h3>
    <h5>Si alguno de estos te gusta mucho, pero quisieras cambiarle algo, probá la opción "Quiero armar uno similar" para que puedas adaptarlo a tu medida.</h5>
    <div class="row make-columns">
        @foreach (var lunch in Model.Where(x => x.IsGeneric && x.IsCombo).OrderBy(x => _lunchRepository.GetTotal(x)))
        {
            <div class="col-xs-6 col-md-4">
                <div class="panel">
                    @await Html.PartialAsync("~/Views/Lunch/ComboDetail.cshtml", lunch)
                </div>
            </div>
        }
    </div>
    <h3 class="text-muted text-left">Algunas de las opciones elegidas por nuestros clientes</h3>
    <div class="row make-columns">
        @foreach (var lunch in Model.Where(x => !x.IsGeneric && x.IsCombo).OrderBy(x => _lunchRepository.GetTotal(x)))
        {
            <div class="col-xs-6 col-md-4">
                <div class="panel">
                    @await Html.PartialAsync("~/Views/Lunch/ComboDetail.cshtml", lunch)
                </div>
            </div>
        }
    </div>
</div>
}
