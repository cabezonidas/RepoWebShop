@model Lunch
@inject ILunchRepository _lunchRepository
@inject IAccountRepository _account


@section metatags {
    <title>Catering Personalizado</title>
}
<style>
    .handy:hover {
        cursor: pointer;
    }

    div.selecteItem {
        background-color: papayawhip
    }

    .row {
        padding: 10px;
    }
</style>

<div class="container text-center">
    <br />
    <div class="row" style="border-top-left-radius: 5px; border-top-right-radius: 5px; max-width: 500px; margin: auto; background-color: #883636; color:papayawhip">
        <h2>Catering Personalizado</h2>
        @Html.Partial("~/Views/Shared/InStoreSwitch.cshtml")
    </div>

    <div id="lunchbox">

        @if (Model != null && Model.Items != null)
        {
            foreach (var item in Model.Items)
            {
                @Html.Partial("~/Views/Lunch/ItemDetail.cshtml", item)
            }
            foreach (var item in Model.Miscellanea)
            {
                @Html.Partial("~/Views/Lunch/MiscellaneousDetail.cshtml", item)
            }
        }
    </div>

    <div class="row hidden-print" style="max-width: 500px; margin: auto;background-color: papayawhip; ">
        <div class="selecteItem">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-left">
                <div>Buscar</div>
                <div style="max-width: 500px; margin: auto">
                    <select name="state" id="items"></select>
                </div>
            </div>
        </div>
    </div>
    @if (await _account.IsAdmin())
    {
        <div class="row hidden-print" style="max-width: 500px; margin: auto;background-color: papayawhip; ">
            <div class="">
                <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 text-left">
                    <div>Agregar Manual</div>
                    <input type="text" class="form-control" id="miscDesc" placeholder="Torta de 1 kg..." />
                </div>
                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 text-left">
                    <div>Precio $</div>
                    <input type="number" class="form-control" id="miscPrice" placeholder="300" />
                </div>
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-right">
                    <span style="margin:auto;" class="handy" onclick="addMiscellaneous()">Agregar</span>
                </div>
            </div>
        </div>
    }
    @{var hidden = _lunchRepository.GetTotal(Model) > 0 ? "" : "hidden";}
    <div class="row @hidden saveLunch  hidden-print" style="max-width: 500px; margin: auto;background-color: papayawhip;  ">
        <div class="selecteItem">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center">
                <a class="btn btn-primary" onclick="save()">Guardar</a>
                <a class="btn btn-primary" onclick="window.print()">Imprimir</a>
                @if (await _account.IsAdmin())
                {
                    <a class="btn btn-primary in-store hidden" onclick="printInStoreCatering()">Ticket</a>
                    <a class="btn btn-primary online" onclick="printOnlineCatering()">Ticket</a>
                }
            </div>
        </div>
        <br />
    </div>

    <div id="totals">
        @Html.Partial("~/Views/Lunch/LunchTotals.cshtml", Model)
    </div>
    <div>
        <a class="btn btn-primary hidden-print" style="margin-top: 5px;" asp-action="Catering" asp-controller="Services">Ver más opciones</a>
        <a class="btn btn-primary hidden-print" style="margin-top: 5px;" asp-action="ClearCustomCateringFromCart" asp-controller="ShoppingCart">Descartar</a>
    </div>
</div>s

<script>
    loaderOn();
    $(document).ready(() => {
        $.get('/api/LunchData/GetProducts/').done((data) => {
            initializeSelector(data);
        });
    });

    function printInStoreCatering() {
        loaderOn();
        $.post("/api/LunchData/PrintInStoreCatering/@Model.LunchId").fail(() => "No se pudo mandar a imprimir").always(() => loaderOff());
    }
    function printOnlineCatering() {
        loaderOn();
        $.post("/api/LunchData/PrintOnlineCatering/@Model.LunchId").fail(() => "No se pudo mandar a imprimir").always(() => loaderOff());
    }

    function initializeSelector(data) {
        $selectize = $('select#items').selectize({
            create: loaderOff(),
            options: data,
            labelField: 'displayName',
            valueField: 'productId',
            searchField: ['displayName'],
            placeholder: "Buscar producto...",
            delimiter: ",",
            render: {
                option: function (item, escape) {
                    return '<div>' +
                        (item.displayName ? '<div class="name" style="color:#883636"">' + escape(item.displayName) + ' <span style="color: green;">$' + escape(item.minOrderAmount * item.price) + ' ' +  minimumOrderPriceFormat(item) + '</span></div>' : '') +
                        (item.price ? '<div class="price" >Precio Unitario: $' + escape(item.price) + ' ' + unitPriceFormat(item) + '</div>' : '') +
                        (item.minOrderAmount ? '<div class="bites">Unidades: ' + escape(item.minOrderAmount) + '</div>' : '') +
                        '</div>';
                },
                item: function (item, escape) {
                    return '<div style="color: green;">' +
                        (item.displayName ? '<span class="name" >' + escape(item.displayName) + '</span>' : '') +
                        (item.minOrderAmount ? ' x ' + escape(item.minOrderAmount) : '') +
                        (item.price ? ' - $' + escape(item.price * item.minOrderAmount) : '') +
                        '</div>';
                }
            },
            onChange: function (event) {
                appendItem(event);
            }
        });
    };

    function unitPriceFormat(item) {
        var priceInStore = '';
        if(item.priceInStore > item.price)
            priceInStore = '<span style="color: red; font-size: smaller;">Sucursal $' + escape(item.priceInStore) + '</span>';
        return priceInStore;
    }

    function minimumOrderPriceFormat(item) {
        var priceInStore = '';
        if(item.priceInStore > item.price)
            priceInStore = '<span style="color: red; font-size: smaller;">Sucursal $' + escape(item.minOrderAmount * item.priceInStore) + '</span>';
        return priceInStore;
    }

    function save() {
        $.post('/api/LunchData/SaveLunch/').done((data) => {
            @{
                if(!await _account.IsAdmin())
                {
                    <text>
                        window.location = '/ShoppingCart/';
                    </text>
                }
                else
                {
                    <text>
                        window.location = '/Lunch/EditCombo/' + data;
                    </text>
                }
            };
        });
    }


    function getTotals() {
        $.get('/api/LunchData/GetTotals/').done((data) => {
            $('#totals').empty().append(data);
        }).always(() => { loaderOff();});

    }

    function appendItem(id) {
        loaderOn();
        $.post('/api/LunchData/AddProduct/' + id).done((data) => {
            pasteItem('product', data, id);
        });
    }

    function pasteItem(type, data, id) {
        if ($('#' + type + '-' + id).length > 0) {
            $('#' + type + '-' + id).replaceWith(data);
            $('#' + type + '-' + id).find(".itemprice").addClass("animated jackInTheBox");
        } else {
            $('#lunchbox').append(data);
            $('#' + type + '-' + id).find(".itemprice").addClass("animated jackInTheBox");
        }
        getTotals();
    }

    function removeLunchItemInstance(id) {
        loaderOn();
        $.ajax({
            url: '/api/LunchData/RemoveProductInstance/' + id,
            type: 'DELETE',
            success: function (data) {
                pasteItem('product', data, id);
            }
        });
    }

    function removeLunchItem(id) {
        loaderOn();
        $.ajax({
            url: '/api/LunchData/RemoveProduct/' + id,
            type: 'DELETE',
            success: function (data) {
                pasteItem('product', data, id);
            }
        });
    }

    function addLunchItemInstance(id) {
        loaderOn();
        $.ajax({
            url: '/api/LunchData/AddProductInstance/' + id,
            type: 'POST',
            success: function (data) {
                pasteItem('product', data, id);
            }
        });
    }

    function removeMiscellaneousInstance(lunchMiscellaneousId) {
        loaderOn();
        $.ajax({
            url: '/api/LunchData/RemoveMiscellaneousInstance/' + lunchMiscellaneousId,
            type: 'DELETE',
            success: function (data) {
                pasteItem('miscellaneous', data, lunchMiscellaneousId);
            }
        });
    }

    function addMiscellaneousInstance(lunchMiscellaneousId) {
        loaderOn();
        $.ajax({
            url: '/api/LunchData/AddMiscellaneousInstance/' + lunchMiscellaneousId,
            type: 'POST',
            success: function (data) {
                pasteItem('miscellaneous', data, lunchMiscellaneousId);
            }
        });
    }

    function removeMiscellaneous(lunchMiscellaneousId) {
        loaderOn();
        $.ajax({
            url: '/api/LunchData/RemoveMiscellaneous/' + lunchMiscellaneousId,
            type: 'DELETE',
            success: function (data) {
                pasteItem('miscellaneous', data, lunchMiscellaneousId);
            }
        });
    }

    function addMiscellaneous() {
        loaderOn();
        $.ajax({
            url: '/api/LunchData/AddMiscellaneous/' + ($('#miscDesc').val()).replace("/", "__") + '/' + $('#miscPrice').val(),
            type: 'POST',
            success: function (id) {
                $.get('/api/LunchData/GetMiscellaneous/' + id).done((data) => {
                    pasteItem('miscellaneous', data, id);
                    $('#miscDesc').val('');
                    $('#miscPrice').val('');
                });
            }
        });
    }


</script>















