@model Lunch
@inject ILunchRepository _lunchRepository
@inject SignInManager<ApplicationUser> _signIn
@inject UserManager<ApplicationUser> _userManager

@{
    var user = await _userManager.GetUser(_signIn);
    var isAdmin = user != null && await _userManager.IsInRoleAsync(user, "Administrator");
}
@if (Model == null)
{
    <div></div>
}
else
{
    <div class="row " style="border-bottom-left-radius:5px; border-bottom-right-radius:5px; max-width: 500px; margin: auto; background-color: #883636; color:papayawhip">
        <div class="selecteItem">
            <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 text-left">
            @if(isAdmin)
            {
                <div>Bocados: @_lunchRepository.GetBites(Model)</div>
                <div>Invitados: @_lunchRepository.GetConvitees(Model) personas</div>
            }
            </div>
            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 text-right">
                @{
                var total = _lunchRepository.GetTotal(Model);
                <h2>Total @Html.Raw(total.ToString("c"))</h2>
                var totalInStore = _lunchRepository.GetLunchTotalInStore(Model);
                if (totalInStore > total)
                {
                    <h4 style="text-decoration-line: line-through">@Html.Raw(totalInStore.ToString("c"))</h4>
                }
                }
            </div>
        </div>
    </div>
    <script>
    @if (_lunchRepository.GetTotal(Model) > 0)
    {
        <text>
            $('.saveLunch').removeClass('hidden');
        </text>
    }
    else
    {
        <text>
            $('.saveLunch').addClass('hidden');
        </text>
    }
    </script>
}