
@inject IConfiguration _config

@{
	var _googleApiKey = _config.GetValue<string>("GoogleApiKeyViews");
	var src = $"https://maps.googleapis.com/maps/api/js?input=Vict&types;=geocode&language;=es&key={_googleApiKey}&libraries=places&callback=initGoogle";
}
<div class="container">
	<div class="title-container">
		<h1 class="title-logo">Delivery</h1>
	</div>

	<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
		<div class="form-group" id="locationField">
			<div class="text-center text-muted" style="margin-bottom: 20px;">
				<h2>Cálculo de envío</h2>
			</div>
			<div>
				<input id="autocomplete" class="form-control" name="address-repo"
					   placeholder="Avenida Jose Maria Moreno 561"
					   onFocus="geolocate()" autocomplete="off" />
			</div>
			<div style="padding: 10px">
				<div style="" id="error" class="hidden alert alert-danger">

				</div>
			</div>
			<h2 id="cost" class="text-center"></h2>
			<div style="margin: 20px;">
				<div class="text-center">
					<a asp-action="Index" asp-controller="Admin" class="btn btn-primary" value="Volver">
						<span class="glyphicon glyphicon-arrow-left">
						</span>
						Volver
					</a>
				</div>
			</div>
		</div>
		<div class="form-group hidden">
			<div class="col-md-2 control-label"></div>
			<div class="col-md-10">
				<table id="address">
					<tr>
						<td>
							<input id="street_number" readonly="readonly" />
						</td>
						<td>
							<input id="route" readonly="readonly" />
						</td>
					</tr>
					<tr>
						<td>
							<input id="locality" readonly="readonly" />
						</td>
					</tr>
					<tr>
						<td>
							<input id="administrative_area_level_1" readonly="readonly" />
						</td>
						<td>
							<input id="postal_code" readonly="readonly" />
						</td>
					</tr>
					<tr>
						<td>
							<input id="country" disabled="disabled" />
						</td>
					</tr>
					<tr>
						<td>
							<input id="locality" disabled="disabled" />
						</td>
					</tr>
					<tr>
						<td>
							<input id="distance" type="number" />
						</td>
					</tr>
				</table>
			</div>
		</div>
	</div>
</div>
<script>
	function getDistance() {
		loaderOn();
		$('#cost').empty();
		$('#error').empty().addClass('hidden');
		var location = $('#autocomplete').val();
		$.get("/api/DeliveryData/GetCost/" + location).then((data) => {
			$('#cost').append("Costo de envío $" + data.cost);
			loaderOff();
		}, (XMLHttpRequest, textStatus, errorThrown) => {
			console.log(XMLHttpRequest);
			console.log(textStatus);
			console.log(errorThrown);
			$('#error').append(XMLHttpRequest.responseJSON.message);
			$('#error').removeClass('hidden');
			loaderOff();
		});
	}

	var placeSearch, autocomplete;
	var componentForm = {
		street_number: 'short_name',
		route: 'long_name',
		locality: 'long_name',
		administrative_area_level_1: 'short_name',
		country: 'long_name',
		postal_code: 'short_name'
	};

	function initAutocomplete() {
		autocomplete = new google.maps.places.Autocomplete(
			(document.getElementById('autocomplete')),
			{
				types: ['address'],
				componentRestrictions: { country: 'ar' }
			});

		autocomplete.addListener('place_changed', fillInAddress);
	}

	function fillInAddress() {
		var place = autocomplete.getPlace();
		for (var component in componentForm) {
			document.getElementById(component).value = '';
		}
		for (var i = 0; i < place.address_components.length; i++) {
			var addressType = place.address_components[i].types[0];
			if (componentForm[addressType]) {
				var val = place.address_components[i][componentForm[addressType]];
				document.getElementById(addressType).value = val;
			}
		}
		getDistance();
	}

	function geolocate() {
		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(function (position) {
				var geolocation = {
					lat: position.coords.latitude,
					lng: position.coords.longitude
				};
				var circle = new google.maps.Circle({
					center: geolocation,
					radius: position.coords.accuracy
				});
				autocomplete.setBounds(circle.getBounds());
			});
		}
	}

	function initGoogle() {
		initAutocomplete();
	}
</script>
<script src="@src" async defer></script>