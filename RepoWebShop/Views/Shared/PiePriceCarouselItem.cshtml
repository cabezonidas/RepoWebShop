@model Product


<div class='addToCart' style="margin: auto;">
    <div style="height: 70px; max-height:70px; ">

        @{var isPromo = Model.PriceInStore > Model.Price; }

            <div style="font-size: larger; ">
                <div>
                    @{ var separator = string.IsNullOrEmpty(Model.Flavour) || string.IsNullOrEmpty(Model.SizeDescription) ? "" : " - "; }
                    <strong>@Html.Raw(Model.SizeDescription + separator + Model.Flavour)</strong>
                </div>
                <div>
                    <strong>$@Model.Price </strong>
                    @if (isPromo)
                    {
                        var perc = Decimal.Floor(100 - (Model.Price / Model.PriceInStore * 100m));

                        <strong style="color: green;">@Html.Raw((perc >= 10 ? $"-{perc}% " : "") + "Online")</strong>
                    }
                </div>
            </div>
            <div style="font-size: smaller;" >
                <div>
                    @if (isPromo)
                    {
                        <strong style="color: red;">$@Model.PriceInStore </strong>
                        <strong>En sucursal</strong>
                    }
                </div>
            </div>


    </div>

    <p class='button'>
        <a title="Comprar" asp-controller="ShoppingCart" asp-action="AddProductToShoppingCart"
           asp-route-id="@Model.ProductId" class="btn btn-primary">
            Comprar
        </a>
    </p>
    <div style="height: 50px; max-height: 50px;  ">
        <div>
            Rinde @Model.Portions <span class="fa fa-pie-chart"></span> Aprox.
        </div>
    </div>
</div>
