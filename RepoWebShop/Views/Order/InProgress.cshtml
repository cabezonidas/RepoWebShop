@model IEnumerable<Order>

@section metatags {
    <title>Pedidos en Proceso</title>
}

@inject ICalendarRepository _calendarRepository

<style>
    div.container {
        font-family: Noto Serif;
    }

    a {
        color: black;
    }
</style>

<div class="container">
    <h2>Pedidos en proceso</h2>

    <table id="orders" class="table-striped">
        <thead>
            <tr>
                <th data-breakpoints="xs">Reserva</th>
                <th data-breakpoints="xs">Estado</th>
                <th data-breakpoints="xs sm">Cliente</th>
                <th data-breakpoints="xs sm">Entrega</th>
                <th data-breakpoints="xs sm">Detalle</th>
                <th data-breakpoints="xs sm">Monto</th>
                <th data-breakpoints="xs sm"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model.OrderBy(x => x.PickUpTime))
            {
                string background_color;
                @if (order.Finished)
                {
                    background_color = "grey";
                }
                else
                {
                    background_color = "red"; //"#ffe2e2";
                }
                <tr style='color:@background_color; '>
                    <td style="text-align: center;">
                        <a style="font-size:large; color: @background_color" asp-action="Detail" asp-controller="Order" asp-route-id="@order.OrderId">@order.FriendlyBookingId</a>
                        @if (order.Finished)
                        {
                            <div style="font-size:smaller">Esperando ser entregada</div>
                        }
                        else
                        {
                            <div style="font-size:smaller">Elaboración en proceso</div>
                        }
                    </td>
                    <td style="color: grey; text-align:center">
                        @order.StatusSpanish
                        <div style="color: green;">
                            @order.Discount?.Phrase
                        </div>
                    </td>
                    <td style="color: grey;">@Html.Raw(order.ContactDataAsHtml)</td>
                    <td>
                        @{
                            var pickUp = order.PickUpTimeFrom ?? order.PickUpTime;


                            if (pickUp != null)
                            {
                                <div>
                                    @if(!order.PickUpTime.HasValue)
                                    {
                                        @Html.Raw(_calendarRepository.SuperFriendlyDate(order.PickUpTimeFrom))
                                    }
                                    else
                                    {
                                        @Html.Raw(_calendarRepository.SuperFriendlyDate(order.PickUpTime))
                                    }
                                </div>
                            }
                        }
                    </td>
                    <td style="text-align:center;">
                        @{
                            List<string> items = new List<string>();
                        }

                        @foreach (var ol in order.OrderLines)
                        {
                            var line = ol.Amount == 1 ? "" : ol.Amount + "x ";
                            line += $"{ol.Pie.PieDetail.Name} {ol.Pie.Name}";

                            items.Add(line);
                        }
                        @foreach (var ol in order.OrderCatalogItems)
                        {
                            var line = ol.Amount == 1 ? "" : ol.Amount + "x ";
                            line += $"{ol.Product.DisplayName}";

                            items.Add(line);
                        }
                        @if (order.OrderCaterings.Any())
                        {
                            items.Add("Catering" + (order.OrderCaterings.Count() == 1 ? "" : $" x{order.OrderCaterings.Count()}"));
                        }
                        @if (order.DeliveryAddress != null)
                        {
                            items.Add("Envío: " + order.DeliveryAddress.AddressLine1?.Split(",")?.FirstOrDefault() ?? "");
                        }
                        @Html.Raw(String.Join("<br/>", items.ToArray()))
                    </td>
                    <td>$@order.OrderTotal</td>

                    <td style="max-width:200px; " class="text-center">
                        @if (order.Finished)
                        {
                            <a class="btn btn-info" onclick="pickedUp(@order.OrderId);" id="@order.OrderId" title="Hacer click si el pedido ya fue entregado">Archivar</a>
                            <div class="text-muted" style="font-size:smaller">Guarda la orden en la base de datos y significa que el cliente ya recibió su producto</div>
                        }
                        else
                        {
                            <a class="btn btn-warning" onclick="orderCompleted(@order.OrderId);" id="@order.OrderId" title="Comunica al cliente que la orden está lista para ser entregada">Notificar Cliente</a>
                            <div class="text-muted" style="font-size:smaller">Avisa al cliente que la orden está lista para ser entregada</div>
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <a asp-controller="Order" asp-action="InProgress" class="">En proceso</a> -
    <a asp-controller="Order" asp-action="AllOrders" class="">Todos</a> -
    <a asp-controller="Order" asp-action="Cancelled" class="">Cancelados</a> -
    <a asp-controller="Order" asp-action="NotYetPaid" class="">Sin pagar</a> -
    <a asp-controller="Order" asp-action="PickedUp" class="">Retirados</a> -
    <a asp-controller="Order" asp-action="Returned" class="">Retornados</a> -
    <a asp-controller="Order" asp-action="Refunded" class="">Dinero devuelto</a>
    <br />
    <br />
</div>

<script type="text/javascript">
    $('#orders').DataTable({
        "language": {
            "url": "/Scripts/SpanishDatatables.json"
        },
        pageLength: 25,
        "aaSorting": []
    });

    function pickedUp(id) {
        $('a#' + id).hide();
        $.ajax({
            type: 'POST',
            url: '/api/OrderData/PickUpOrder/' + id,
            data: {},
            success: function (data) {
                window.location.reload();
            },
            error: function (xhr, textStatus, error) {
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
    }

    function orderCompleted(id) {
        $('a#' + id).hide();
        $.ajax({
            type: 'POST',
            url: '/api/OrderData/CompleteOrder/' + id,
            data: {},
            success: function (data) {
                window.location.reload();
            },
            error: function (xhr, textStatus, error) {
                console.log(xhr.statusText);
                console.log(textStatus);
                console.log(error);
            }
        });
    }

    $(document).ready(function () {
        setTimeout(function () {
            window.location.reload();
        }, 60000);
    });
</script>